@charset "UTF-8";

@import url('reset.css');
@import url('global.css');

body {
    background-color: var(--cor1);
}

body::before {
    content: ""; 
    background-image: url('../imagens/background.jpg');
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;

    width: 100%;
    height: 100%;
    position: absolute;
    opacity: 0.2;
    transition: backgrond-image 1s ease-in-out, opacity 1s ease-in-out;
}




.s-menu {
    padding: 1rem 0; /* o rem é o valor colocado nele x o tamanho da fonte */
    width: 100%;
    text-align: center;
    position: relative; /* pro menu ficar clicável novamente por conta do ::before absolute */
}

.s-menu__item {
    display: inline-block; /*elementos um ao lado do outro*/
    text-transform: uppercase;
    margin: 0 1.25rem;
}

.s-menu__icon {
    width: 2.5rem;
    margin: 0 1.25rem;
    vertical-align: middle; /* aranha no meio dos nomes */

}


.s-container {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    perspective: 3000px;
}


.s-card {
    border: 0.5em solid white;
    width: calc(100vw / 3 - 10);
    height: 70vh;
    position: absolute;
    transition: filter .5s ease-in-out;
}

.s-card:nth-child(1) {
    transform: rotateY(0deg) translateZ(50vw);
}

.s-card:nth-child(2) {
    transform: rotateY(120deg) translateZ(50vw);
}

.s-card:nth-child(3) {
    transform: rotateY(240deg) translateZ(50vw);
}

.s-card__background {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    opacity: 1;
    transition: opacity 1 ease-in-out;
}

.s-card__image {
    width: 100%;
    height: 100%;
    object-fit: contain;
    position: relative;
    transition: 1s ease-in-out;
}

.s-card__title {
    font-size: 2em;
    text-transform: uppercase;
    text-align: center;
    position: absolute;
    width: 100%;
    bottom: 0;
    transition: bottom 1s ease-in-out;
}


.s-controller {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 3rem;
    bottom: 1.5rem;
    width: 100%;
}

.s-controller__button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2.5rem;
    height: 2.5rem;
    border: 2px solid white;
    border-radius: 50%;
    background-color: var(--cor1);
    text-align: center;
    font-size: 1rem; /*16px*/
    font-weight: bold;
    cursor: pointer;
    z-index: 1; /*pra linha não cobrir os círculos*/
    transition: transform 0.3s ease-in-out; ;
}

.s-controller__button:hover {
    transform: scale(1.1);
}

.s-controller__button:nth-child(2) {/*pegar o 2º elemento antes da classe antes dos 2 pontos */
   margin: 0 3.75rem;
} 

.s-controller__button--active {
    background-color: white;
    color: var(--cor1);
    border: 0.1875rem solid var(--cor1);
    outline: 0.125rem solid white; /*cria outra borda no botão*/
}

.s-controller__line {
    background-color: white;
    width: 50%;
    height: 2px;
    position: absolute;
}


/* Hover Animation */ /* Trocar background ao passar o mouse */

.s-card--hovered .s-card__background {
    cursor: pointer;
    opacity: 0;
}

.s-card--hovered .s-card__image {
    transform: scale(1.4);
    filter: drop-shadow(30px 10px 4px rgba(0, 0, 0, .5)); /*sombra projetada*/
}


body#spider-man-01-hovered::before {
    background-image: url('../imagens/background2.jpg');
}

body#spider-man-02-hovered::before {
    background-image: url('../imagens/pic-sm-bg-02.jpg');
}

body#spider-man-03-hovered::before {
    background-image: url('../imagens/pic-sm-bg-03.jpg');
}

body[id^="spider-man-"]::before { 
    /* seletor por atributo, pra pegar um atributo do body em especifico */ /* para trocar o fundo de acordo com o elemento, tirando o fundo vermelho que tinha antes. */

    opacity: 1;
} 

body[id^="spider-man-"] .s-card:not(.s-card--hovered) { /* pegar todos os cards que não tenham hovered */
     
    filter: grayscale(100%);
}

.s-card--hovered .s-card__title {
    bottom: 50%; /*título no meio ao passar o mouse */
}



/*
x = horizontal
y = vertical
z = profundidade

transform: translate (permite mover o elemento da atual posição de acordo com o eixo x, y ou z).

rotate (permite rotacionar o elemento no eixo x, y ou z).

perspective (define quão longe um elemento está longe do usuário, um valor mais baixo será um efeito mais 3D
*/


.s-cards-carousel {
    display: flex;
    justify-content: center;
    width: calc(100vw / 3 - 10%);
    transform-style: preserve-3d; /* para que os elementos filhos do elemento que está sendo colocado o carrossel mantenha suas configurações */

    transition: transform 0.4s ease-in;
}